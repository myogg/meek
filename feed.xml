<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/myogg/meek</id><title>RSS feed of myogg's meek</title><updated>2024-04-27T17:35:12.489360+00:00</updated><link href="https://github.com/myogg/meek"/><link href="https://raw.githubusercontent.com/myogg/meek/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><entry><id>https://github.com/myogg/meek/issues/14</id><title>推荐耳根著的《光阴之外》,听不一样的玄幻修仙小说</title><updated>2024-04-27T17:35:12.873208+00:00</updated><content type="html"><![CDATA[<p><strong>此次介绍的网络小说是《光阴之外》，作者：耳根，知名阅文集团白金作家，作品有：《三寸人间》《我欲封天》《一念永恒》《求魔》《仙逆》等，都是精品之作。</strong></p>
<p><img src="https://pic.imgdb.cn/item/662d35900ea9cb1403b3d386.webp" alt="" /></p>
<p>###一、作品简介：世人皆在光阴之内熙熙攘攘，生与死的差距是否就在于光阴，光阴之外到底是什么？这本《光阴之外》，耳根用自己独创的故事讲述了自己内心深处那光阴之外的世界。男主：许青，性格极为坚韧，做事狠辣、隐忍，理智、冷静，原则性强，典型的末世求生类型的主角特点。</p>
<p>###二、剧情介绍：该书风格是末世+金手指+仙侠。开篇仍以一向高质量的文笔描述出那如墨般的云层、绯红色的闪电、暗红的血雨以及尸横遍野的末世景象，并交待出来自遥远虚空的“残面”到来后给万物带来了毁灭，他每隔数年获数十年睁眼一次，其注视的地方都生灵涂炭，化为永恒的禁区，男主就在这禁区求生中偶遇金手指-神秘的紫色水晶。机缘巧合，男主遇到拾荒者小队，并与他们一道去往了外面的拓荒者营地，在明与暗地争斗中，男主在求生中成长，为后续的征途奠定了基础。至于男主日后如何走上修仙之旅以及如何闯荡，可以关注该书的后续剧情发展。</p>
<p>###三、亮点分析：巧妙地将末日流与仙侠流相结合。通过环境、人物的描述，绘制出一幅身在末世，残酷冷血，弱肉强食的画面。反映出只有不顾一切地用力，才能拼得一线生机，这样也奠定了男主为了生存而奋力斗争、不断变强的基调。同时，结合仙侠的修真手段，为男主的成长方式打造了清晰的轨迹，又结合仙侠流派的背景，为后续剧情的不断拓展做好了铺垫。</p>
<p>###四、感受：看小说时，能够很快被带入剧情，男主冷酷狠辣，拼尽全力在末世中求生。剧情也快速推进，随着男主不断地战斗，内心热血爆棚。同时，修仙流的庞大背景也给读者们留下来无尽的想象空间。</p>
]]></content><link href="https://github.com/myogg/meek/issues/14"/><category term="正文"/><published>2024-04-27T17:29:05+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/13</id><title>广州国家站4月雨量刷新历史记录</title><updated>2024-04-27T17:35:13.054381+00:00</updated><content type="html"><![CDATA[<p>截至2024年4月27日16时，广州国家站（59287）记录到的4月累计雨量为455.8毫米、打破了自1951以来的4月雨量纪录 。</p>
<p>希望平安！</p>
]]></content><link href="https://github.com/myogg/meek/issues/13"/><category term="心情"/><published>2024-04-27T17:23:06+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/12</id><title>阿里云的AI模型EMO上线通义App，允许用户通过照片和音频生成唱歌视频</title><updated>2024-04-27T17:35:13.200721+00:00</updated><content type="html"><![CDATA[<p>由通义实验室研发的AI模型EMO已在通义App上线，供用户免费使用。EMO是一个音频驱动的AI肖像视频生成系统，能够根据输入的参考图像和语音音频生成具有表现力的面部表情和头部姿势视频。用户可以选择多种模板，如热门歌曲或网络热梗，上传肖像照片后，EMO将合成相应的唱歌视频。目前，App提供了80多个模板，但不支持自定义音频。</p>
<p>EMO的主要特点包括音频驱动的视频生成、高表现力和逼真度、无缝帧过渡、身份保持、稳定的控制机制、灵活的视频时长以及跨语言和风格的适应能力。此外，EMO的官方项目主页、研究论文和GitHub链接均已提供，模型和源码将待开源。</p>
<p><a href="https://humanaigc.github.io/emote-portrait-alive/">项目主页</a>
<a href="https://github.com/HumanAIGC/EMO">GitHub(待开源)</a>
<a href="https://arxiv.org/abs/2402.17485">Arxiv</a></p>
]]></content><link href="https://github.com/myogg/meek/issues/12"/><category term="一些记录"/><published>2024-04-27T17:09:17+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/11</id><title>2017年十张最佳天文图片（NASA-APOD中文版）</title><updated>2024-04-27T17:35:13.338158+00:00</updated><content type="html"><![CDATA[<p>第一位
2017 年1 月1 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2eaa0ea9cb1403a5071a.webp" alt="" /></p>
<p>笼罩挪威的极光</p>
<p>影像提供与版权: Sebastian Voltmer</p>
<p>说明:在高于最高的建物、最高的山岳、最大飞航高度的飞机之处，是极光的国度。极光鲜少伸展到60公里以下，但向上则可延伸到1,000公里高处。极光是高能电子和质子冲撞地球大气的分子之后，所产生的景象。如果在太空中观看极光，常可见到一圈完整环拱着地球南磁极或北磁极的极光环。上面这幅5年前摄于挪威东部、水平方向经过压缩的广角主题影像，记录了当时满天意外出现的极光。</p>
<p>第二位
2017 年1 月8 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2eab0ea9cb1403a507d1.webp" alt="" /></p>
<p>IC 4406:形似方形的星云</p>
<p>影像提供: CR O'Dell ( Vanderbilt U. ) et al. , Hubble Heritage Team , NASA</p>
<p>说明:一颗浑圆的恒星怎会产生方形的星云呢?这样的疑惑，在探索行星状星云 IC 4406C 4406之时就会冒出来。证据指出IC 4406可能是个中空的圆柱，只是从我们所在的角度看出去，看到的是这个圆柱的侧面，所以就见到它这一副方正的模样；若是从IC 4406的上方往下看，它可能貌似环状星云。这张代表色照片，结合了哈伯太空望远镜在2001年及2002年所拍摄的影像。其中，热气体自圆柱两端涌出，而黝黑尘埃与分子气体交织成的黑色细丝则镶嵌在侧壁上。造成这座星际雕塑的始作俑者，则座落在行星状星云的中心。再过数百万年，IC 4406将空留一颗逐渐暗去的白矮星供人凭吊。</p>
<p>第三位
2017 年 2 月 25 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2eab0ea9cb1403a50827.jpg" alt="" /></p>
<p>行星全景 图</p>
<p>影像提供与版权: Tunç Tezel (TWAN)</p>
<p>说明: 这幅沿着黄道面360度环绕的精采全景影像，记录了星空中的7颗行星。这张组合自1月24-26日摄于菲律宾．巴拉望省．公主岛（爱妮岛）．纳克潘海滩的数张照片之全景影像，呈现了幽暗清晨的东方地平面（左）及夜晚的西方地平面之天空景观。在其中，由淡淡黄道光带所标示的黄道横贯影像中央，而银河则斜贯过右侧。在东方，可见到稍纵即逝的水星及其附近的云朵和月亮。在它的右侧，沿着黄道面依序有泛黄的土星、明亮的心宿二及更右方的木星。紧贴著黄道面中段的有狮子座的最亮星轩辕十四和星团M44。聚在夜空西方地平面附近的黄道面上之行星，有昏暗的天王星、泛红的火星、明亮的金星和更为暗淡的海王星。把鼠标移到上面影像之上，可带出另一幅有详细标记的影像（或者点此连结）。</p>
<p>第四位
2017 年 5 月 18 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2eab0ea9cb1403a509b7.webp" alt="" /></p>
<p>超新星遗迹Simeis 147</p>
<p>影像提供与版权: Daniel López (El Cielo de Canarias) / IAC</p>
<p>说明: 在这张暗淡超新星遗迹Simeis 147的细致影像里，视线很容易迷失在繁复的丝状结构中。编录号亦为Sh2-240的Simeis 147，更常见的昵称是意大利面星云。位在金牛座和御夫座交界的Simeis 147，涵盖了将近3度（6个满月的宽度）的天区。以这团恒星碎片云3,000光年的估计距离来换算，遗迹的跨幅大约为150光年。这幅精彩的组合影像，部份的影像数据是透过窄波段滤镜所拍摄，以强化来自电离氢原子的泛红辉光，并突显受到激震的辉光气体。这个超新星遗迹的估计年龄大约是40,000 年，也就是说，来自这次个大质量爆炸的亮光，大约在40,000年前首次传抵地球。不过扩张的碎片云，并不是此个天体爆炸事件的唯一余荫，部份恒星的核心也残存下来，形成了一颗称为波霎、快速自转的中子星。</p>
<p>第5位
2017 年 6 月 3 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2ead0ea9cb1403a50deb.webp" alt="" /></p>
<p>通过近木点</p>
<p>影像提供: NASA, Juno, SwRI, MSSS, Gerald Eichstadt, Sean Doran</p>
<p>说明: 5月19日，在绕行太阳系最大气态巨行星的53天循环轨道上，朱诺号太空船再次掠过木星。上面这幅由朱诺相机拍摄的垂直排列14格色泽强化序列影像，由上到下呈现了在2小时飞越期间，太空船掠过木星俯视北极区、赤道和南极区（尾端的影格）的快速视角变化。随着视野缩减，第七和第八影格为近距离特写影像，摄于朱诺号第六次最近距离掠过木星之前，这二张赤道区影像的间隔只有4分钟。这个序列影像的尾端，呈现了向外曳航的太空船，所见到的椭圆形、名为木星珍珠串的白色风暴系统和木星南极区。</p>
<p>第六位
2017 年 7 月 24 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2f110ea9cb1403a6535a.webp" alt="" /></p>
<p>肯尼亚上空的混合日食</p>
<p>影像提供与版权: Eugen Kamenew (Kamenew Photography)</p>
<p>说明: 追逐日食会让你前往最有趣的地点，并遇到最有趣的人。举例来说，追上面这个日食，让天文摄影者在2013年前往肯尼亚。而他在当地的陪同人员是一位马赛族人，原先是要到机场接他，陪他到肯尼亚南部游览，甚至同意为他穿上传统的战士服饰，站在一座山头眺望背景远处应很精采的西沈食日。很遗憾的是，这位天文摄影者的当地陪同人在他抵达前一周往生，所以这位马赛人并未参与实际参与摄影，更不知道所拍摄的照片后来为摄影者赢得一项国际摄影大奖。上面这幅2013年摄于肯尼亚的照片，呈现了罕见的混合日食期间月盘遮住绝大部分太阳的景象；在那一天，地球上的部分地点的居民见到了日全食，也有部分地点看因月亮离地球太远无法遮住整个日盘，而见到了日环食。在下个月，将发生一次横切过美国本土的日全食。</p>
<p>第七位
2017 年 8 月 30 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2f110ea9cb1403a65d76.webp" alt="" /></p>
<p>日食与星迹的全景组合图</p>
<p>影像提供与版权: Stephane Vetter (Nuits sacrees, TWAN)</p>
<p>说明: 在上星期的日全食期间，天空中出现了什么？这幅摄于单一地点的小小行星 全天图，呈现了经过数位接合的双重间时摄影，并且见证了黑夜与白画的天体运行景观。在这张360度x180度的全景图里，北方和南方分别位在影像的底端和顶端，而东方与西方则在影像的左缘和右缘。在日食前一夜的4小时期间，影像记录了随着地球自转，恒星绕北天极（下方）回旋所曳出的星迹。在日全食的这天，从日出到日落（上半图）每隔15分钟所进行的太阳取像，也记录了日偏食阶段。然后所有拍下的照片，再应用数位技术叠合在日全食期间所拍摄的单一照片上。影像中，可见到太阳明亮的日冕环拱在黝黑新月盘面周围的景观（左上方），而在此同时，金星也出现在影像的上缘附近。影像中间位在相机下方的树是道格拉斯冷杉。这幅精心规划和拍摄的影像，摄于美国．奥勒冈州的马冈湖。</p>
<p>第八位
2017 年 9 月 6 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2f120ea9cb1403a6671e.webp" alt="" /></p>
<p>攀岩者与全食日</p>
<p>影像提供与版权: Andrew Struder</p>
<p>说明: 如果你的攀岩照片有全食日来抢镜头，该怎么办呢？高声欢呼吧，因为你的规画实现了。花了数个月考量各个地点，然后再花一个星期在美国．奥勒冈州的史密斯岩州立公园寻找合适地点，由Ted Hesser、Martina Tibell和Michael Shainblu领军的一群摄影同好，终于选定100米高的美丽猴脸岩作为即将降临的日全食之摄影前景。随着日食即将降临，气氛越来越临绷，规画的叠合位置一再审视，攀岩者Tommy Smith的位置也经过微调。而如期如规画的，月亮移到太阳前方，Smith挡在月亮前方。在上面影像里所见到的钻石环景观，出现在日全食阶段，当月盘后方的远方太阳仅剩些许可见之时。</p>
<p>第9位
2017 年 12 月 10 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2f120ea9cb1403a67037.webp" alt="" /></p>
<p>绿光的国度： 挪威上空的极光</p>
<p>影像提供与版权: Max Rive</p>
<p>说明: 看见极光时请举手。虽然心里悬著这个指示，但是连续二个晚上基本上见到的只是云朵。在第三晚重登顶峰时，天空不但澈澄澈，而且被满天精采的极光妆点得晶亮。高举著胜利的双手，因为除了耐心和经验终于得到回报之外，使用所拍下的3张照片，也得以组合出这幅主题影像。影像里的山峰，位在北挪威．Lofoten群岛．Svolvear镇附近的Austnesfjorden 峡湾。拍照的时间则是在2014年的年初。虽然太阳目前处在极小期附近，因此最近少有表面活动，然而一些位在日冕高层的日冕洞，在过去的数个月之中，还是为我们带来许多精采的极光活动。</p>
<p>第10位
2017 年 12 月 25 日</p>
<p><img src="https://pic.imgdb.cn/item/662d2f120ea9cb1403a676b9.webp" alt="" /></p>
<p>极区上空的火流星</p>
<p>影像提供与版权: Yang Sutie (杨苏铁)</p>
<p>说明: 有很明亮的光源照亮了极区，它会是什么呢？摄影者原先是想拍摄一系统的极光照片，然后再把它们制作成缩时影片。不过，当黑夜突然变成白画之时，这位天文摄影者很快就意识到，他见证了更精采的景观。当时在天空掠过北斗七星前方的，不仅仅只是一颗双子座流星，而且是一颗如假包换的明亮火流星。这颗流星突然变亮，然后持续了数秒钟才消失。很幸运的，原先设置要拍摄极光的相机还是能记录下完整的迹线。这张影像摄于双子座流星雨极大期后一晚，摄影者的位置则在俄罗斯．摩尔曼斯克市的洛沃泽罗湖附近，比北极圈要偏北一点。</p>
]]></content><link href="https://github.com/myogg/meek/issues/11"/><category term="随笔"/><published>2024-04-27T17:03:25+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/10</id><title>当前 Telegram 的连接性出现严重故障</title><updated>2024-04-27T17:35:13.503614+00:00</updated><content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/662be96c0ea9cb1403172d16.jpg" alt="" />
当前 Telegram 的连接性出现严重故障</p>
<p>本次故障的主要影响地区为 DC5，即亚太区域（新加坡机房），美洲部分地区用户也有报告服务器可靠性相关问题。
主要影响范围为隶属于 DC5 的帐号、群组、频道和 bot。
主要影响时间为昨日 23:58 至今日 01:36，截至 01:40 聊天等基本功能已恢复。
(频道、群聊的消息统计等功能恢复时间未定）</p>
<p>本消息发送时间为凌晨 01:15，上载至服务器的时间未知。
如果各位看到这条消息请放宽心，并不是用户本地网络问题。</p>
]]></content><link href="https://github.com/myogg/meek/issues/10"/><category term="一些记录"/><published>2024-04-26T17:52:37+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/9</id><title>Github上优秀的Java项目</title><updated>2024-04-27T17:35:13.640156+00:00</updated><content type="html"><![CDATA[<p>大家都知道 Github 是一个程序员福地，这里有各种厉害的开源框架、软件或者教程。这些东西对于我们学习和进步有着莫大的进步，所以我有了这个将 Github 上非常棒的 Java 开源项目整理下来的想法。我会按照几个维度对项目进行分类，以便大家查阅。当然，如果你觉得不错的话，欢迎给本项目点个 Star。我会用我的业余时间持续完善这份名单，谢谢 。</p></p>
<p>欢迎大家推荐自己觉得不错的 Java 项目，下面项目的排序很大程度是根据当前项目的 Star 数量。</p>
<p>如果有码云上比较好的项目的话，我也会推荐到这里来！另外，我也会推荐少部分过于优秀但是非开源的优质 Java 项目。</p>
<p>项目地址：</p>
<p><a class="LinkCard LinkCard--noImage" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/awesome-java" target="_blank" data-draft-node="block" data-draft-type="link-card" data-za-detail-view-id="172"><span class="LinkCard-content"><span class="LinkCard-text"><span class="LinkCard-title" data-text="true">https://github.com/Snailclimb/awesome-java<span class="LinkCard-meta">​github.com</span></span></span></span></a></p>
<h2><strong>教程</strong></h2>
<h3><strong>Java</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/JavaGuide" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JavaGuide</a></strong>&nbsp;:【Java 学习+面试指南】 一份涵盖大部分 Java 程序员所需要掌握的核心知识。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/CyC2018/CS-Notes" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">CS-Notes</a></strong>&nbsp;：技术面试必备基础知识、Leetcode 题解、后端面试、Java 面试、春招、秋招、操作系统、计算机网络、系统设计。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/doocs/advanced-java" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">advanced-java</a></strong>&nbsp;:互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/qiurunze123/miaosha" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">miaosha</a></strong>&nbsp;： 秒杀系统设计与实现.互联网工程师进阶与分析。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/xingshaocheng/architect-awesome" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">architect-awesome</a></strong>&nbsp;：后端架构师技术图谱。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/hollischuang/toBeTopJavaer" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">toBeTopJavaer</a></strong>&nbsp;：Java 工程师成神之路 。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/eugenp/tutorials" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">tutorials</a></strong>：该项目是一系列小而专注的教程 - 每个教程都涵盖 Java 生态系统中单一且定义明确的开发领域。 当然，它们的重点是 Spring Framework - Spring，Spring Boot 和 Spring Securiyt。 除了 Spring 之外，还有以下技术：核心 Java，Jackson，HttpClient，Guava。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/crossoverJie/JCSprout" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JCSprout</a></strong>&nbsp;:处于萌芽阶段的 Java 核心知识库。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/AobingJava/JavaFamily" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JavaFamily</a></strong>&nbsp;：【互联网一线大厂面试+学习指南】进阶知识完全扫盲。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/javagrowing/JGrowing" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JGrowing</a></strong>&nbsp;：Java is Growing up but not only Java。Java 成长路线，但学到不仅仅是 Java。</li>
</ol>
<h3><strong>数据结构/算法</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/MisterBooo/LeetCodeAnimation" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">LeetCodeAnimation</a></strong>&nbsp;:Demonstrate all the questions on LeetCode in the form of animation.（用动画的形式呈现解 LeetCode 题目的思路）。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/TheAlgorithms/Java" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">TheAlgorithms-Java</a></strong>&nbsp;:All Algorithms implemented in Java。</li>
</ol>
<h3><strong>SpringBoot</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/springboot-guide" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">springboot-guide</a></strong>&nbsp;：SpringBoot 核心知识点总结。 基于 Spring Boot 2.19+。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wuyouzhuguli/SpringAll" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringAll</a></strong>&nbsp;：循序渐进，学习 Spring Boot、Spring Boot &amp; Shiro、Spring Cloud、Spring Security &amp; Spring Security OAuth2，博客 Spring 系列源码。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/JeffLi1993/springboot-learning-example" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">springboot-learning-example</a></strong>&nbsp;：Spring Boot 实践学习案例，是 Spring Boot 初学者及核心技术巩固的最佳实践。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/xkcoding/spring-boot-demo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-boot-demo</a></strong>&nbsp;：spring boot demo 是一个用来深度学习并实战 spring boot 的项目，目前总共包含 63 个集成 demo，已经完成 52 个。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/YunaiV/SpringBoot-Labs" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringBoot-Labs</a></strong>&nbsp;：Spring Boot 系列教程。</li>
</ol>
<h3><strong>SpringCloud</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/forezp/SpringCloudLearning" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringCloudLearning</a></strong>&nbsp;: 方志朋的《史上最简单的 Spring Cloud 教程源码》。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/dyc87112/SpringCloud-Learning" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringCloud-Learning</a></strong>&nbsp;: Spring Cloud 基础教程，持续连载更新中。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/yinjihuan/spring-cloud" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud</a></strong>&nbsp;： 《Spring Cloud 微服务-全栈技术与案例解析》和《Spring Cloud 微服务 入门 实战与进阶》配套源码。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/ityouknow/spring-cloud-examples" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud-examples</a></strong>&nbsp;：Spring Cloud 学习案例，服务发现、服务治理、链路追踪、服务监控等 （基本没更新了，Spring Cloud 比较老了）。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/zhoutaoo/SpringCloud" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringCloud</a></strong>&nbsp;：基于 SpringCloud2.1 的微服务开发脚手架，整合了 spring-security-oauth2、nacos、feign、sentinel、springcloud-gateway 等。服务治理方面引入 elasticsearch、skywalking、springboot-admin、zipkin 等，让项目开发快速进入业务开发，而不需过多时间花费在架构搭建上。</li>
</ol>
<h3><strong>大数据</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/heibaiying/BigData-Notes" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">BigData-Notes</a></strong>&nbsp;:大数据入门指南 ⭐️。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/zhisheng17/flink-learning" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">flink-learning</a></strong>&nbsp;：含 Flink 入门、概念、原理、实战、性能调优、源码解析等内容。</li>
</ol>
<h3><strong>设计模式</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/iluwatar/java-design-patterns" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">java-design-patterns</a></strong>&nbsp;： Design patterns implemented in Java。</li>
</ol>
<h2><strong>实战项目</strong></h2>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/macrozheng/mall" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">mall</a></strong>&nbsp;：mall 项目是一套电商系统，包括前台商城系统及后台管理系统，基于 SpringBoot+MyBatis 实现。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/macrozheng/mall-swarm" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">mall-swarm</a></strong>&nbsp;: mall-swarm 是一套微服务商城系统，采用了 Spring Cloud Greenwich、Spring Boot 2、MyBatis、Docker、Elasticsearch 等核心技术，同时提供了基于 Vue 的管理后台方便快速搭建系统。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wxiaoqi/Spring-Cloud-Admin" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Spring-Cloud-Admin</a></strong>&nbsp;：Cloud-Admin 是国内首个基于 Spring Cloud 微服务化开发平台，具有统一授权、认证后台管理系统，其中包含具备用户管理、资源权限管理、网关 API 管理等多个模块，支持多业务系统并行开发，可以作为后端服务的开发脚手架。代码简洁，架构清晰，适合学习和直接项目中使用。核心技术采用 Spring Boot2 以及 Spring Cloud Gateway 相关核心组件，前端采用 vue-element-admin 组件。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//gitee.com/log4j/pig" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">pig</a></strong>：（gitee）基于 Spring Boot 2.2、 Spring Cloud Hoxton &amp; Alibaba、 OAuth2 的 RBAC 权限管理系统。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/linlinjava/litemall" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">litemall</a></strong>&nbsp;： 又一个小商城。litemall = Spring Boot 后端 + Vue 管理员前端 + 微信小程序用户前端 + Vue 用户移动端。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/lenve/vhr" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">vhr</a></strong>&nbsp;：微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wuyouzhuguli/FEBS-Shiro" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">FEBS-Shiro</a></strong>&nbsp;：Spring Boot 2.1.3，Shiro1.4.0 &amp; Layui 2.5.4 权限管理系统。</li>
</ol>
<h2><strong>系统设计</strong></h2>
<h3><strong>微服务/分布式</strong></h3>
<h3><strong>基础框架</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/spring-projects/spring-boot" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-boot</a></strong>&nbsp;：Spring Boot 可以轻松创建独立的生产级基于 Spring 的应用程序,内置 web 服务器让你可以像运行普通 Java 程序一样运行项目。另外，大部分 Spring Boot 项目只需要少量的配置即可，这有别于 Spring 的重配置。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/spring-cloud-alibaba" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud-alibaba</a></strong>&nbsp;: Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/spring-cloud/spring-cloud-kubernetes" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud-kubernetes</a></strong>&nbsp;： Kubernetes 集成 Spring Cloud Discovery Client, Configuration, etc&hellip;。</li>
</ol>
<h3><strong>Spring Cloud Alibaba 相关</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/Sentinel" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Sentinel</a></strong>&nbsp;：A lightweight powerful flow control component enabling reliability and monitoring for microservices. (轻量级的流量控制、熔断降级 Java 库)。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/dubbo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">dubbo</a></strong>&nbsp;：Apache Dubbo 是一个基于 Java 的高性能开源 RPC 框架。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/nacos" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">nacos</a></strong>&nbsp;：Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。Nacos 可以作为 Dubbo 的注册中心来使用。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/seata/seata" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">seata</a></strong>&nbsp;: Seata 是一种易于使用，高性能，基于 Java 的开源分布式事务解决方案。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/rocketmq" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">RocketMQ</a></strong>&nbsp;：阿里巴巴开源的一款高性能、高吞吐量的分布式消息中间件。</li>
</ol>
<h3><strong>API 网关</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Kong/kong" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">kong</a></strong>&nbsp;：Kong 是一个云本地的、快速的、可伸缩的分布式微服务抽象层(也称为 API 网关、API 中间件或在某些情况下称为服务网格)。2015 年作为开源项目发布，其核心价值是高性能和可扩展性。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Dromara/soul" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">soul</a></strong>&nbsp;：高性能、基于 webflux 的反应式 Java API 网关</li>
</ol>
<h3><strong>其他</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/flink" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">flink</a></strong>&nbsp;：Apache Flink 是一个框架和分布式处理引擎，用于在<em>无边界和有边界</em>数据流上进行有状态的计算。Flink 能在所有常见集群环境中运行，并能以内存速度和任意规模进行计算。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/skywalking" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">skywalking</a></strong>&nbsp;: 针对分布式系统的应用性能监控，尤其是针对微服务、云原生和面向容器的分布式系统架构。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/ctripcorp/apollo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">apollo</a></strong>&nbsp;：Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/openzipkin/zipkin" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">zipkin</a></strong>&nbsp;：Zipkin 是一个分布式跟踪系统。它有助于收集解决服务体系结构中的延迟问题所需的时序数据。功能包括该数据的收集和查找。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/analysys/EasyScheduler" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">EasyScheduler</a></strong>&nbsp;： Easy Scheduler 是一个分布式工作流任务调度系统，主要解决&ldquo;复杂任务依赖但无法直接监控任务健康状态&rdquo;的问题。Easy Scheduler 以 DAG 方式组装任务，可以实时监控任务的运行状态。同时，它支持重试，重新运行等操作&hellip; 。</li>
</ol>
<h3><strong>消息中间件</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/rocketmq" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">RocketMQ</a></strong>&nbsp;：阿里巴巴开源的一款高性能、高吞吐量的分布式消息中间件。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/kafka" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Kafaka</a></strong>: Kafka 是一种分布式的，基于发布 / 订阅的消息系统。关于它的入门可以查看：<a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/JavaGuide/blob/master/docs/system-design/data-communication/Kafka%25E5%2585%25A5%25E9%2597%25A8%25E7%259C%258B%25E8%25BF%2599%25E4%25B8%2580%25E7%25AF%2587%25E5%25B0%25B1%25E5%25A4%259F%25E4%25BA%2586.md" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Kafka 入门看这一篇就够了</a></li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/rabbitmq" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">RabbitMQ</a></strong>&nbsp;:由 erlang 开发的基于 AMQP（Advanced Message Queue 高级消息队列协议）协议实现的消息队列。</li>
</ol>
<h3><strong>搜索引擎</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/elastic/elasticsearch" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">elasticsearch</a></strong>：开源，分布式，RESTful 搜索引擎。</li>
</ol>
<h3><strong>数据库</strong></h3>
<ul>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/redisson/redisson" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">redisson</a></strong>&nbsp;：&nbsp;<a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//redisson.org/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Redisson</a>是架设在<a class=" wrap external" href="https://link.zhihu.com/?target=http%3A//redis.cn/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Redis</a>基础上的一个 Java 驻内存数据网格（In-Memory Data Grid）。支持超过 30 个对象和服务:Set, multiap, SortedSet, Map, List, Queue, Deque, Semaphore, Lock, AtomicLong, Map Reduce, Publish / Subscribe, Bloom filter, Spring Cache, Tomcat, Scheduler, JCache API, Hibernate, RPC。<a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/redisson/redisson/wiki/Redisson%25E9%25A1%25B9%25E7%259B%25AE%25E4%25BB%258B%25E7%25BB%258D" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Redisson 项目介绍</a></li>
</ul>
<h3><strong>其他</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/canal" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">canal</a></strong>&nbsp;:阿里巴巴 MySQL binlog 增量订阅&amp;消费组件。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/DataX" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">DataX</a></strong>&nbsp;：DataX 是阿里巴巴集团内被广泛使用的离线数据同步工具/平台，实现包括 MySQL、Oracle、SqlServer、Postgre、HDFS、Hive、ADS、HBase、TableStore(OTS)、MaxCompute(ODPS)、DRDS 等各种异构数据源之间高效的数据同步功能。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/dianping/cat" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">cat</a></strong>&nbsp;： CAT 作为服务端项目基础组件，提供了 Java, C/C++, Node.js, Python, Go 等多语言客户端，已经在美团点评的基础架构中间件框架（MVC 框架，RPC 框架，数据库框架，缓存框架等，消息队列，配置系统等）深度集成，为美团点评各业务线提供系统丰富的性能指标、健康状况、实时告警等。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wildfirechat/server" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">server</a></strong>&nbsp;： 野火 IM 是一套跨平台、核心功能开源的即时通讯解决方案。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/halo-dev/halo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">halo</a></strong>&nbsp;:Halo 可能是最好的 Java 博客系统。</li>
</ol>
<h2><strong>工具</strong></h2>
<h3><strong>常用工具类/代码质量</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/rzwitserloot/lombok" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">lombok</a></strong>&nbsp;:使用 Lombok 我们可以简化我们的 Java 代码，比如使用它之后我们通过注释就可以实现 getter/setter、equals等方法。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/google/guava" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">guava</a></strong>&nbsp;：Guava 是一组核心库，其中包括新的集合类型（例如 multimap 和 multiset），不可变集合，图形库以及用于并发、I / O、哈希、原始类型、字符串等的实用程序！</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/p3c" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">p3c</a></strong>&nbsp;：Alibaba Java Coding Guidelines pmd implements and IDE plugin。Eclipse 和 IDEA 上都有该插件，推荐使用！</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/arthas" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">arthas</a></strong>&nbsp;： Arthas 是 Alibaba 开源的 Java 诊断工具。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/SonarSource/sonarqube" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">sonarqube</a></strong>&nbsp;：SonarQube 支持所有开发人员编写更干净，更安全的代码。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/checkstyle/checkstyle" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">checkstyle</a></strong>&nbsp;:Checkstyle 是一种开发工具，可帮助程序员编写符合编码标准的 Java 代码。它使检查 Java 代码的过程自动化，从而使人们不必执行这项无聊（但很重要）的任务。这使其成为想要实施编码标准的项目的理想选择。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/pmd/pmd" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">pmd</a></strong>&nbsp;: 可扩展的多语言静态代码分析器。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/spotbugs/spotbugs" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spotbugs</a></strong>&nbsp;:SpotBugs 是 FindBugs 的继任者。静态分析工具，用于查找 Java 代码中的错误。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/looly/hutool" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">hutool</a></strong>&nbsp;: Hutool 是一个 Java 工具包，也只是一个工具包，它帮助我们简化每一行代码，减少每一个方法，让 Java 语言也可以&ldquo;甜甜的&rdquo;。</li>
</ol>
<h3><strong>Excel</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/easyexcel" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">easyexcel</a></strong>&nbsp;:快速、简单避免OOM的java处理Excel工具。</li>
</ol>
<h3><strong>PDF</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/pdfbox" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">pdfbox</a></strong>&nbsp;:用于处理PDF文档的开放源码Java工具。该项目允许创建新的PDF文档、对现有文档进行操作以及从文档中提取内容。PDFBox还包括几个命令行实用程序。PDFBox是在Apache 2.0版许可下发布的。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/LibrePDF/OpenPDF" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">OpenPDF</a></strong>&nbsp;：OpenPDF是一个免费的Java库，用于使用LGPL和MPL开源许可创建和编辑PDF文件。OpenPDF基于iText的一个分支。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/itext/itext7" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">itext7</a></strong>&nbsp;：iText 7代表了想要利用利用好 PDF 的开发人员的更高级别的 sdk。iText 7配备了更好的文档引擎、高级和低级编程功能以及创建、编辑和增强 PDF 文档的能力，几乎对每个工作流都有好处。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//xmlgraphics.apache.org/fop/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">FOP</a></strong>&nbsp;:Apache FOP 项目的主要的输出目标是PDF。</li>
</ol>
<h3><strong>开发必备</strong></h3>
<h3><strong>API 请求</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//insomnia.rest/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Insomnia</a></strong>&nbsp;:像人类而不是机器人一样调试API。我平时经常用的，界面美观且轻量，总之很喜欢。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//www.getpostman.com/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">postman</a></strong>&nbsp;：API 请求生成器。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/liyasthomas/postwoman" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">postwoman</a></strong>&nbsp;：API 请求生成器-一个免费、快速、漂亮的 Postma 替代品。</li>
</ol>
<h3><strong>Markdown</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//www.typora.io/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Typora</a></strong>&nbsp;:我一直用的一款 Markdown 工具，直接文件夹试图和目录试图，支持 Markdown 格式直接导出成 PDF、HTML 等格式。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/adam-p/markdown-here" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">markdown-here</a></strong>&nbsp;：使用 markdown 语法发邮件，并且提供多种主题，快来拯救你的邮件格式吧！</li>
</ol>
<h3><strong>其他</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/thingsboard/thingsboard" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">thingsboard</a></strong>&nbsp;：开源物联网平台 - 设备管理，数据收集，处理和可视化。</li>
</ol>]]></content><link href="https://github.com/myogg/meek/issues/9"/><category term="一些记录"/><published>2024-04-26T17:19:47+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/8</id><title>世界上第一台  @NVIDIA</title><updated>2024-04-27T17:35:13.788310+00:00</updated><content type="html"><![CDATA[<p>DGX H200，由 Jensen 亲手交付给 OpenAI，致力于“推进人工智能、计算和人类发展”
<img src="https://pic.imgdb.cn/item/662be02a0ea9cb1403fe6c93.png" alt="" /></p>
]]></content><link href="https://github.com/myogg/meek/issues/8"/><category term="一些记录"/><published>2024-04-26T17:12:58+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/7</id><title>62年前俄罗斯徒步者命案：UFO、KGB还是雪崩？</title><updated>2024-04-27T17:35:13.936199+00:00</updated><content type="html"><![CDATA[<p><a href="https://img.imgdb.cn/item/6039ea145f4313ce25ed933e.jpg"></a>
徒步者摄于1959年1月28日的照片。相机和底片是在发现远足者尸体后找到的。
莫斯科——1959年，是什么驱使九名经验丰富的徒步旅行者——有些人光着脚，几乎光着身子——走出帐篷，进入气温达到零下的严寒和坟墓般黑暗的俄罗斯荒野？
<img src="https://img.imgdb.cn/item/6039ea145f4313ce25ed9342.jpg" alt="" />
62年前的这个星期，当他们的尸体在乌拉尔山脉的一个偏远山口被发现时，没人能解释到底是什么——或者是谁——杀死了他们。
几十年来，这个谜题一直困扰着调查人员，并为许多书籍、电影和电视节目提供灵感。但现在，两位科学家认为他们可能终于找到了答案。
<img src="https://img.imgdb.cn/item/6039ea145f4313ce25ed9347.jpg" alt="" />
对一些俄罗斯人来说，这一长久的谜题已有了民族传奇的色彩，有人把它称为“迪亚特洛夫狂热”(Dyatlovmania)，它的名字来自年轻的登山队员领队伊戈尔·迪亚特洛夫(Igor Dyatlov)。这是一种将理性研究和疯狂的阴谋论相结合的痴迷，其中一些涉及UFO或雪人（yeti，据传生活在喜马拉雅山区，形如人类。——译注）。</p>
]]></content><link href="https://github.com/myogg/meek/issues/7"/><category term="正文"/><published>2024-04-26T16:56:42+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/6</id><title>比岳飞还牛的两位抗金名将：一个病逝前线，一个被贬13年</title><updated>2024-04-27T17:35:14.092947+00:00</updated><content type="html"><![CDATA[<p>康元年春正月，金人犯京师，军于城西北。”</p>
<h4>1</h4>
<p>靖康元年（1126年）正月，金兵长驱直入，攻占相州（今河南安阳），距离开封不过咫尺之遥。</p>
<p>宋徽宗内禅后，从小不爱嬉戏游玩、才能平平的老实人宋钦宗，从他老爸手中接过了皇位这个烫手山芋，终日惶恐，无法安心过新年。
宰相李纲给了他安全感。</p>
<p>城外战况紧急，李纲招募敢死之士2000人，身先士卒，与金人鏖战于京城西北。之后，刺血上书劝说宋徽宗退位的李纲，又担负起保卫京城的重任，还把打算弃城而逃的宋钦宗拉了回来。</p>
<p>宋钦宗听说金兵渡河，本来撒腿就要跑，禁军将士都备好鞍马，甚至把太庙供奉的皇帝牌位也请了出来，一行人在清晨时偷偷摸摸地整装待发。
李纲进宫见此情景，对将士们厉声说道：“尔等愿以死守宗庙乎？”
将士们不愿当逃兵，高喊：“我等愿意死守！不在此，将去何处？”
这仗不好打，却还有得打。</p>
<p>李纲入殿，对宋钦宗说：“陛下昨天跟臣说要留下，今天又要跑路，这是为何？六军将士的父母妻儿都在京城，不愿离去，万一中途失散，谁来当您的保镖？况且敌人的骑兵已经逼近，若他们知道陛下车驾出城未远，快马加鞭前去追赶，该如何抵挡？”</p>
<p>宋钦宗听到出城更危险，小心脏有点受不了，只好留在城中。但朝中主和派依旧畏金如虎，处处对李纲形成掣肘，还派人出使金营，以纳币、割地、送人质为条件，请金人退兵。</p>
<!---more--->
<p>▲李纲（1083年-1140年）</p>
<p>李纲身陷主和派围攻时，另一个主战派大臣宗泽也来到了开封。
不久后，在主和派的举荐下，宗泽被任命为“和议使”。临行前他对小伙伴们说：“我这一去，就不能活着回来了。”</p>
<p>众人感到诧异，问他这是为何。</p>
<p>宗泽正气凛然地回答道：“敌人若知悔改，带兵撤离自然是好事。否则，我怎么可能向金人卑躬屈膝，有辱使命呢！”</p>
<p>有人将此事报告给宋钦宗，主和派才知，这个使者根本就没想替朝廷议和，而是铁了心要和金人搏命，这不得谈崩了。趁着车马还没出发，宋钦宗赶紧把宗泽撤下来，改派他出知磁州（今河北磁县）。</p>
<p>李纲与宗泽，这两位铁骨铮铮的的主战派，在国家危难之际同时赶赴前线。
他们的命运从此与大宋一落千丈的国运交织在一起，余生陷入有心报国、无力回天的无尽愁苦之中。</p>
<p>▲宗泽（1060年-1128年）</p>
<h4>2</h4>
<p>金人兵临开封城下，李纲将城中兵力重新布防，命弓箭手猛射金兵，放火焚烧攻城云梯，等待各路勤王军队陆续到来。</p>
<p>城外，各路宋军集结，号称20万。城中军民士气大振，同仇敌忾，还有李纲主持大局，可北宋还是没有逃过灭亡的命运，甚至遭受了前所未有的耻辱。
南宋的朱熹评价靖康年间朝政时，用了这四个字——“无一是处”。</p>
<p>很多人常认为，宋钦宗就是个背黑锅的，如果没有他爹宋徽宗把国家折腾得乌烟瘴气，北宋朝廷也不会迅速崩溃。实际上，宋钦宗这个亡国之君，对北宋覆灭也有不少责任，是他自己把取胜的筹码全给赔进去了。</p>
<p>曾经有一个李纲在宋钦宗面前，他没有好好珍惜。</p>
<p>在指挥开封保卫战短短不到一年的时间里，李纲两度被贬，他提出的计策，宋钦宗不愿采纳，失利后却还要追究他的责任。</p>
<p>起初，李纲认为金人贪婪无厌，战斗力极强，宋军应该坚壁固守，等到金人食尽力疲时，再出兵收复失地。“纵其北归，半渡而击之”，这就是必胜之道。</p>
<p>但是，宋钦宗却一心想用20万大军速战速决，执意命各路军队出战，偷袭金营。结果，宋军劫寨失败，主和派把出师败绩的罪名推到李纲等主战派身上，李纲因此被罢免官职。</p>
<p>李纲指挥作战时，金人不敢贸然出击，听说李纲被罢官，他们当天就派出一支骑兵到城下耀武扬威，气焰嚣张。</p>
<p>城中宋朝臣民的表现比金人还要激烈，太学生陈东叫来上百名同学伏阙上书，掀起一场大规模抗议运动。闻风而来的军民多达十余万人，集结于宫门外为李纲伸冤，直言李纲是唯一能承担天下重任的人，主和派大臣尽是“庸缪不才，忌疾贤能”之辈。</p>
<p>愤怒的群众毁坏了宫门外的栏杆，甚至朝主和派大臣投掷瓦砾，之后还打死了几个宦官。当有人指责他们要挟天子时，太学生们高声答道：“以忠义胁天子，不逾于奸佞胁之乎？”</p>
<p>之后，宋钦宗急命李纲官复原职，并一起登上高楼与百姓见面，才渐渐平息众怒。</p>
<p>在这场北宋灭亡前夕的爱国请愿运动中，抗议者的思想高度可谓超前，他们不顾所谓的君臣大义，宁死也要支持忠心报国的李纲复职。这是一种真正的爱国精神。</p>
<p>但身处漩涡中心的李纲，也因此引起宋朝皇帝忌惮。</p>
<p>李纲复出后，再次整军备战，痛击金兵，形势对城外的金人愈发不利。胜利的天平一度向宋军倾斜，进退失据的金兵，终于在次月解围而去。</p>
<p>宋钦宗看金人走了，有点儿飘，又不听李纲的话，竟然还要对支持抗金的太学生下手。</p>
<p>在李纲复职次日，宋钦宗颁布命令，说：“士庶有以伏阙上书为名者，意在做乱，今后如更有似此之人，即与收捉，并从军法斩讫奏闻。”</p>
<p>这是说，今后再有群众抗议，直接处死。</p>
<p>主和派大臣趁机散布流言，说李纲早就有意鼓动太学生，威胁皇帝重用自己。在朝中奸佞小人的打压下，正义的声音再度被淹没。</p>
<p>当时开封流传着这样一句民谣：“城门闭，言路开；城门开，言路闭。”</p>
<p>北宋朝廷一片混乱，仅仅过了几个月，金兵就卷土重来，于靖康元年秋攻陷了坚守八个多月的军事重镇太原，又一次剑指汴京，阴霾笼罩在黄河两岸。
此时，李纲却已被贬出朝。他被宋钦宗派往河北、河东解围，实际上无兵无钱，战败后被贬到南方。李纲离京前为朝廷筹划的抗金之策，也被主和派全盘否定。</p>
<p>李纲前脚刚走，宋钦宗受投降派蛊惑，将他所征调的军队罢去一半，尤其是罢四川、福建、广东、荆湖诸路正规军与京西诸州的非正规军，取消钱粮犒赏的费用，完全就是“送人头”行为。</p>
<p>离京不过几天的李纲得知后大惊，连忙上书反对。其中说到，主和派认为四川等地路途遥远，但征发之诏四月就已下达，现在远方之兵都在路上，如果以寸纸之书让他们回去，朝廷如何取信于天下？臣担心日后再有号召，天下无应者矣！</p>
<p>果不其然，金兵再次兵临开封城下，偏远之地响应朝廷号召的勤王之兵寥寥无几。</p>
<h4>3</h4>
<p>宋廷不断派出使者求和，却无法抵挡金兵进军的步伐。金人根本没把屈辱求和的北宋君臣放在眼里，说：“待汝家议论定时，我已过河矣。”</p>
<p>另一边，早已看出议和并非救国之策的宗泽，正带领十几个老弱士卒前往磁州任职，那是抗金的第一线。一路上，临危不惧的宗泽写下了《早发》一诗：</p>
<p>繖幄垂垂马踏沙，水长山远路多花。</p>
<p>眼中形势胸中策，缓步徐行静不哗。</p>
<p>这一年，宗泽已年近七旬，他招募义勇，发动民众修缮城墙，制造兵器。磁州一带抗金形势一片大好，宗泽为此上书道：“邢、洺、磁、赵、相五州，各蓄精兵二万，敌攻一郡，则四郡皆应，是一郡之兵，常有十万人也。”
但朝廷仍然是主和派占了上风，宋钦宗派出宋徽宗第九子、康王赵构再度出使金营议和。</p>
<p>赵构路过磁州时，宗泽叩拜迎接，劝谏道：“金人不过是用花言巧语诱骗我们前去议和，他们的军队已经打过来了，再去金营还有什么可谈的，请康王不要去了！”</p>
<p>赵构很聪明，他也听说金兵已经渡河，不愿自投罗网，于是掉了个头，后来一边受宋钦宗册封，打着兵马大元帅的旗号聚集溃军，一边跑到济州（今山东巨野）安顿下来，不敢与金兵正面交锋。宗泽多次苦劝他直趋澶渊，收复失地，解京城之围，赵构却无动于衷。</p>
<p>宗泽只好孤军奋战，向开封进军。宗泽率军出征后，一路和金兵打了十三场仗，全部获胜，将士们毫不畏惧金兵强悍的战斗力。</p>
<p>国难当头，宗泽一面写信请赵构会师京城，一面联络其他宋军，继续向开封挺进。他鼓舞手下将士，说：“现在进退都是死，我们必须死里求生！”
李纲与宗泽的奋战，还是无法阻止汴京陷落。</p>
<p>宋钦宗向金人递上降书后，满城君臣百姓如羊入虎口，尽是悲泣之声。</p>
<p>靖康二年（1127年），金人纵
焚城，烧杀掳掠，挟持徽钦二帝、宗室、妃嫔、大臣等三千多人北归。
宗泽得知这一消息，立即率领大军抄近路赶到大名（今河北大名县），想联合各军过河堵住金兵的归路，将二帝抢回来。</p>
<p>可当他到达时，各路军队竟然没有一支前来勤王，宗泽孤掌难鸣，只好望河兴叹，眼见金人带着“战利品”远去。北宋俘虏到了北方苦寒之地，“男十存四，女十存七”，无数人惨遭蹂躏侮辱，倒毙路旁。
这，就是靖康之变。北宋，灭亡。</p>
<p>老当益壮的宗泽，深深感受到一种无力感，而这种不甘与悲愤，成为其短暂的抗金生涯中唯一的基调。</p>
<h4>4</h4>
<p>在济州吃瓜看戏的赵构成了大赢家。</p>
<p>21岁的赵构，从孟太后（北宋哲宗皇后）派出的使者手中接过刻有篆文“大宋受命之宝”的玉玺，即位称帝，改元建炎，重建政权，史称南宋。</p>
<p>宋高宗赵构为了树立威望，即位后不得不起用主战派的李纲为相。他还写了封信给受命回朝的李纲：“方今天下生民遭此劫难，只有阁下这样学穷天人、忠贯金石的大臣辅佐朕，才能符合苍生的期望。”</p>
<p>赵构的亲信黄潜善、汪伯彦对这一安排极为不满，这两位都是“无进攻之志”的主和派，且自以为对宋高宗有“攀附之劳”，怎么说也得讨个宰相当当。</p>
<p>黄、汪二人，成了李纲、宗泽抗金的阻碍，而他们背后的老板赵构，也是一个耳根子软的懦弱之徒。</p>
<p>建炎元年（1127年），李纲出任宰相后，为赵构呈上“议国是”等十事，认为当务之急是防御金人再次南侵。他与主和派势不两立，敢于当面与皇帝的宠臣黄、汪抬杠，这股忠直耿介的气度让他与宋高宗渐行渐远。</p>
<p>李纲前来行在拜见高宗时，赵构知道他跟主和派闹矛盾，就让黄潜善负责设宴款待，并由汪伯彦等人陪同，希望他们尽释前嫌，修复一下关系。没有什么是一顿饭不能解决的，如果有，那就两顿。</p>
<p>可是李纲不按套路出牌，他见过赵构后，上奏请辞此宴，直接回家，把黄潜善等朝中大臣直接晾在大门外，也不打声招呼。</p>
<p>汪、黄早已备好筵席，等了大半天也没见着李纲人影，得知真相后怒不可遏，从此玩了命整李纲。</p>
<p>赵构一即位，之前担任其副元帅的宗泽也前往拜见，向高宗陈述抗金大计，说到激动时不禁老泪纵横，在一旁的李纲也为之动容。</p>
<p>一天，李纲在朝见时与宗泽偶遇，有过一番谈话，他们谈及国事，为之心痛不已，也为抗金大业慷慨激昂。当时，开封府缺一名独当一面的大臣驻守，李纲就向高宗极力推荐宗泽：“绥复旧都，非宗泽不可。”</p>
<p>▲宗泽、李纲等主战派力主抗金，迎回二圣。</p>
<p>赵构早想着重用宗泽，李纲也欲留他共同主持大局，但是以黄潜善、汪伯彦为首的主和派大臣屡屡从中作梗。最后，高宗只是授宗泽以龙图阁学士、知襄阳府，让他去建设大后方。</p>
<p>李纲立马察觉此事不对劲，便一再奏请擢宗泽为开封府尹、东京留守，大力支持其对京城的防御。</p>
<p>这些“糟老头子”犟得很，赵构自知拗不过，只好同意。
孤独的宗泽，在主和派轻蔑的眼光中，来到那座已经没有皇帝的都城。
开封不久前惨遭金兵劫掠，盗贼蜂起，人心惶惶，城中残破不堪，“冻馁死者十五、六”，早已看不出一丝《清明上河图》中那盛世繁荣的气象。
同样孤立的李纲，在朝中不断受到黄、汪等党羽的攻击。
有人说李纲，“名浮于实，而有震主之威，不可以相。”还有人老调重弹，用之前北宋大臣的言论抨击他：“为金人所恶，不宜为相。”</p>
<h4>5</h4>
<p>李纲与宗泽有共同主张，他们一人在朝，一人在汴，艰难支撑起抗金的大旗。</p>
<p>他们都善于利用河北、河东等地民兵。</p>
<p>当时，各地义兵兴起，打着勤王的旗号，却各怀心思，难以统一调度。但朝廷眼中的这些“匪”“寇”兵力雄厚，是李纲与宗泽一心争取的对象。</p>
<p>淮南的杜用，山东的李昱，襄阳的李孝忠，都被李纲调兵遣将一一讨平，降者多达十余万，归于诸将帐下，听候调遣，构成一道横跨数州的防线，只待渡河讨伐金兵。</p>
<p>京西、淮南、两河一带的“草头王”们也在宗泽爱国精神的感召下，纷纷加入匡扶宋室的队伍。</p>
<p>濮州义军的首领王善，自称手下有数十万之众，兵车万乘，本来不给宗泽好脸色看，还想出兵占领汴京。</p>
<p>宗泽听闻此事，亲自前去劝降，单骑入营与王善相见，请他加入抗金大军，说：“朝廷正当危难之时，如果有一两位如你这样的人，岂还会有敌患？今日就是立功的好时机，机不可失啊。”</p>
<p>王善一看，宗泽年近七旬，还一心为国为民，极富诚意，对他佩服不已，二话不说，解甲归降。</p>
<p>寿春人丁进，江湖人称“丁一箭”，聚众数万人，听闻宗泽的威名，带兵前往京城近郊求见。</p>
<p>宗泽的部下都担心有诈，宗泽却说：“精诚所至，金石为开，何况是人呢？”
丁进到后，宗泽亲自接见，像对待老部下一样与他亲切交谈。丁进十分感动，当即请宗泽前去视察他的部队。宗泽毫不怀疑，第二天就去慰问了丁进的军队。</p>
<p>从此，丁进所部归入宗泽麾下，成为保卫汴京的一支生力军。如果发现队伍中有人怀有二心，丁进会果断地将其斩杀。</p>
<p>除此之外，还有外号“没角牛”的杨进、李贵、王大郎、王再兴等各自拥兵割据一方，宗泽晓以大义，将他们一一招降。</p>
<p>李、宗二人对主战派的同志，也都是知人善任。</p>
<p>李纲举荐了张所、傅亮等主战派，此二人分别被任命为河北路招抚使与河东路招抚使。</p>
<p>张所在北宋当过御史，宋朝向金朝割地求和时，他主张招募河北民兵救援京城，后来黄潜善被高宗重用后，他又上疏直言黄潜善奸邪误国，因此被贬到江州。这些主战派一个个都脾气火爆。</p>
<p>得到李纲提拔后，张所来到河北招揽豪杰，整顿军备。一个因越职言事而被逐出军营的青年，在此时来到河北投奔张所，后来归于宗泽帐下。
他，就是岳飞。</p>
<p>岳飞只是一个低级军官，敢于说真话，此前上书论事，惹祸上身。
他竟然谴责“黄潜善、汪伯彦辈不能承圣意恢复，奉车驾日益南，恐不足系中原之望”，还义正辞严地请高宗“亲率六军北渡，则将士作气，中原可复”。</p>
<p>这样一个刺头，深得宗泽器重。</p>
<p>有一次，岳飞触犯了军法，本来要严加处置。宗泽一见到他，交谈之后，发现他是一名不可多得的将才。</p>
<p>正值金人入侵汜水，宗泽给了岳飞将功补过的机会，让他带五百名骑兵作为先锋部队出战。</p>
<p>岳飞初出茅庐，就尽显军事奇才，在这次遭遇战中痛击金军。岳飞凯旋后，宗泽赦免了他的罪，并升他为统制，年轻的岳飞由此成名。</p>
<p>然而，李纲与宗泽，这两位最有威望的抗金大佬之间，却出现了一些裂痕。
宗泽抗金的思想，是主动进攻。南宋一建立，他就向宋高宗“乞兵十万往收复河北”。他招揽各地民兵，也是“用之以转战，而不用之以固守”。</p>
<p>李纲的计划却是以守为主，在坚守中原的同时，也要保护宋高宗安全，他建议高宗巡幸襄阳等地，而不要急着北上。所谓“待其来寇，则严守御以备之。”（李纲《奏议·议国是》）</p>
<p>宗泽与李纲在抗金计划上的分歧，似乎动摇了他们共同的主战立场。
君子和而不同，小人却寡廉鲜耻。李纲与宗泽的政敌，主和派的黄潜善、汪伯彦合作默契，在反对主战派的行动上保持高度一致。</p>
<h4>6</h4>
<p>黄潜善、汪伯彦的首要目标，就是扳倒李纲，进而把持朝政。</p>
<p>因为选择“巡幸”之地一事，宋高宗与李纲的君臣关系闹崩了。</p>
<p>赵构在战乱中即位，即便宗泽已经过去把他老家开封府“打扫”了一遍，他也迟迟不敢回家。李纲的战略是以守为攻，官家不敢回老家就不回了，那就去河南、荆襄之地巡幸，以表示不放弃中原之志</p>
<p>李纲的主张已经算是妥协，宋高宗却还不愿接受，没有最怂，只有更怂，想要继续南逃避难，更不可能北伐，迎回二帝。于是黄潜善、汪伯彦都出来拍马屁，提出巡幸东南以避敌的意见。</p>
<p>从此，宋高宗更加依赖黄、汪二人，有意疏远李纲。年轻气盛的他对执拗的李纲愈发不满，说：“李纲这个家伙，竟然把朕当小孩子看待！”</p>
<p>李纲不愿认输，坚称不可放弃中原，跑去东南躲避，上疏道：</p>
<p>自古中兴之主，起于西北，则足以据中原而有东南，起于东南，则不能以复中原而有西北。盖天下精兵健马皆在西北，一旦委中原而弃之，岂惟金人将乘间以扰内地；盗贼亦将蜂起为乱，跨州连邑，陛下虽欲还阙，不可得矣，况欲治兵胜敌以归二圣哉？</p>
<p>抗击金人，光复中原，迎回二圣，李纲的每一句话都踩中了赵构心中的雷。</p>
<p>▲宋高宗，1127-1162年在位。</p>
<p>到了建炎元年（1127年）八月，在汪、黄等人的攻讦下，李纲以“狂诞刚愎”、“设心为何，专制若此”等罪被罢相，前后上任仅75天，其规划的军政也几乎被废除。</p>
<p>黄、汪一党穷追不舍，接连上书弹劾，一直把李纲贬到了南方瘴疠之地——海南岛。</p>
<p>李纲罢相后，之前在靖康围城时帮助过他的太学生陈东再次出面力挺，三次上书，请求宋高宗不要罢免李纲，指出黄、汪不可信，还要高宗“还汴、治兵、亲征、迎请二帝”。</p>
<p>这一次，皇权露出了尖锐的獠牙，宋高宗听到陈东等人为李纲求情，还敢教训自己，甚至质疑自己皇位的合法性，他果断下令，将陈东等上书言事的太学生处死。有学者认为，陈东直到死，也未与李纲有一面之交。
李纲罢相，意味着主战派在朝中失去话语权。</p>
<p>主和派汪、黄屡屡从中阻挠抗金，宋高宗也不再受制于人，彻底放飞自我，在罢免李纲不久后就逃到了扬州。</p>
<p>如此一来，最难熬的，就是宗泽。</p>
<h4>7</h4>
<p>建炎二年（1128年）春，留守东京的宗泽已经招抚各地义军百万之众，且积蓄了半年军粮，他多次上书痛斥黄、汪一党懦弱无能，请皇帝还京掌国，却一次次石沉大海。</p>
<p>宗泽知道赵构“恐金症”晚期，可能不相信他的话，还在奏疏中诚恳地说：“臣若有毫发误国大计，臣有一子五孙，甘被诛戮。”</p>
<p>在一次与金兵的交战中，宗泽擒获了辽国旧将王策，亲自为其松绑，请他坐于堂上。</p>
<p>两人都与金人有国仇，宗泽对他说：“契丹本来是我大宋兄弟之国，如今女真辱我主，又将你们灭国，我们应当同心协力，一雪前耻啊！”</p>
<p>王策听宗泽这么说，感动得稀里哗啦，也不计较北宋之前背信弃义，就将金人的虚实全部告知宗泽，进一步坚定了宗泽抗金的决心。</p>
<p>宗泽打听到两河州县金军兵力空虚，前后上疏二十多次，恳请赵构“早还华阙”，发兵北伐。宗泽的文书如雪片般飞来，可赵构都不为所动。</p>
<p>一直拖到当年七月，宋高宗仍然没有表态，宗泽的部队迟迟无法进军。</p>
<p>宗泽望眼欲穿，期盼着皇帝移驾开封，希望却如此渺茫。</p>
<p>他病倒了。</p>
<p>年迈的宗泽忧愤成疾，背上生疽，从此一病不起。</p>
<p>当将领们在榻前问候时，他支撑着坐起来，说：“我本来没病，只因二帝蒙尘，心生忧愤。希望诸位能够奋力歼敌，那样我就死而无憾了。”</p>
<p>众将听罢，泪流不止，表示一定不会辜负宗泽的嘱托。</p>
<p>在生命的最后时光里，宗泽反复悲吟杜甫写诸葛亮的诗句“出师未捷身先死，长使英雄泪满襟”，没有一句话谈及家事。</p>
<p>临终前，他大呼三声“渡河”，悲愤去世。</p>
<p>宗泽的儿子宗颖，将其遗表上呈高宗，表中最后几句写道：“属臣之子，记臣之言，力请銮舆，亟还京阙，大震雷霆之怒，出民水火之中。夙荷君恩，敢忘尸谏！”</p>
<p>不知宋高宗读罢，心中是何感受。</p>
<p>宗泽的理想，随他消逝在东京梦华之中。李纲却在失意的烦恼之中，又艰难地活了13年。每次宋金议和，这个老愤青都要上书把主和派痛骂一顿。</p>
<p>绍兴八年（1138年），主和派的秦桧入朝执政，南宋再一次与金朝议和。
早已远离中枢的李纲虽然失去存在感，但还是投了反对票，上书高宗，言辞激烈，其中说到，金人毁我宗庙，迫害二帝，他们是我们的仇敌，我们是他们的心腹大患，岂有讲和的道理？</p>
<p>李纲直接怼宋高宗，责问他：“何况现在还有半壁天下，臣民都拥戴大宋，如果陛下与有识之士一起谋划，还能有所作为。怎可忘记祖宗的基业和百姓的期望，不加考虑就急于向金人屈服，希望苟延性命于旦夕之间呢？”</p>
<p>天底下也没几个人敢这么跟皇帝说话了。</p>
<p>当时主和的大臣认为李纲忤逆，请求将其治罪。高宗却为李纲开脱，说：“大臣当如此矣。”</p>
<p>他告诉皇帝，老臣迂腐，不善于明哲保身，总是上书烦扰陛下，这几年，臣频繁反复地受提拔、贬斥，不仅有损于陛下知人善任的英明，也有损于国体。</p>
<p>这番话，好像还有几分讽刺的意思。昨天的你对我爱答不理，今天的我让你高攀不起。</p>
<p>高宗看罢，也不愿强求。</p>
<p>又过了一年，58岁的李纲也走到了生命的尽头。</p>
<p>李纲一生六起六落，自罢相后漂泊四方，壮志难酬。晚年的他屡遭贬谪，身体日衰，以“病牛”自喻，曾在谪居鄂州期间，写了一首《病牛》诗：</p>
<p>耕犁千亩实千箱，力尽筋疲谁复伤？</p>
<p>但得众生皆得饱，不辞羸病卧残阳。</p>
<p>任何一个时代，都不缺李纲、宗泽这样的硬骨头。</p>
<p>可又有多少时代，容得下这样的硬骨头？</p>
<p>全文完，感谢您的耐心阅读，顺手点个“在看”让我知道您在看~</p>
<p>参考文献：</p>
<p>[宋] 李心传：《建炎以来系年要录》，上海古籍出版社，2008年</p>
<p>[元] 脱脱：《宋史》，中华书局，1985年</p>
<p>[清] 毕沅：《续资治通鉴》，中华书局，1999年</p>
<p>何忠礼：《南宋全史》，上海古籍出版社，2011年</p>
<p>[日] 寺地遵：《南宋初期政治史研究》，复旦大学出版社，2016年</p>
<p>白晓霞：《南渡三宰相研究（1127-1138）》，暨南大学博士论文2006年</p>
]]></content><link href="https://github.com/myogg/meek/issues/6"/><category term="正文"/><published>2024-04-26T16:52:46+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/5</id><title>「祖传歌单」何去何从？你需要这份主流音乐平台「歌单迁移指南」</title><updated>2024-04-27T17:35:14.259563+00:00</updated><content type="html"><![CDATA[<p><img src="https://pic.downk.cc/item/5ff584373ffa7d37b3ad12e6.jpg" alt="" /><img src="https://pic.downk.cc/item/5ff584bf3ffa7d37b3adcc2f.jpg" alt="" />
TL; DR
国内平台可以通过分享歌单链接，并在新的平台应用中粘贴来实现迁移。其中，QQ 音乐不支持分享为链接，需要在分享菜单点击「新浪微博」，才能在输入框中复制链接。
国内平台迁移至 Spotify 可以使用 Uselesses，支持网易云音乐、QQ 音乐、虾米音乐和百度音乐。
国内平台迁移至 Apple Music 可以使用 TuneMyMusic 来导入，需要先将歌单处理为文本形式，再一次性导入。
国外平台相互迁移可以选择 TuneMyMusic 或 SongShift。
国内平台
如果你想在国内音乐平台中迁移歌单，难度并不会特别大。因为各大平台的 app 基本都提供了「导入外部歌单」的功能，你需要关心的只有音乐版权的问题。
<img src="https://pic.downk.cc/item/5ff584bf3ffa7d37b3adcc2f.jpg" alt="" />
国内平台的歌单导入方式通常为识别歌单链接。你需要在原先的音乐平台将歌单分享为链接或带二维码的音乐卡片形式，随后在新的平台上找到「导入外部歌单」的功能，并粘贴链接 / 扫描二维码即可。</p>
<p>如果遇到不支持将歌单导出为链接的平台，你也可以在分享菜单中点击「新浪微博」，并在跳转至微博客户端后复制输入框里的链接。这个方法需要在设备上安装微博客户端，相比于分享链接或二维码，还是稍微繁琐了一些。</p>
<p><img src="https://pic.downk.cc/item/5ff584d43ffa7d37b3ade7ba.jpg" alt="" />
通过微博获取链接
分享链接的方式仅支持国内平台，Apple Music 和 Spotify 的歌单链接均无法被识别。</p>
<p>虾米音乐
虾米音乐的导入功能被放在 我的音乐 - 创建的歌单 底部，支持链接和二维码两种形式。你只需要根据页面提示粘贴链接或导入二维码即可，即使虾米的版权库里没有相关歌曲，你也可以将音乐暂时添加进去。</p>
<p>在实际体验中，虾米音乐的导入速度比较可观，导入的成功率也很高。在导入酷狗音乐歌单时，偶尔会遇到「系统正在帮你导入歌单」的情况，耗时相对较长。这一现象在其它音乐平台上也偶有发生，下文就不再赘述。
<img src="https://pic.downk.cc/item/5ff584d93ffa7d37b3adeff0.jpg" alt="" />
在导出方面，虾米音乐支持将歌单分享为链接，并且可以被其他音乐平台识别并导入。对了，「仅自己可见」的歌单是没有分享按钮的，你需要将其设为公开才能进行分享。</p>
<p>QQ 音乐
QQ 音乐的导入功能在 我的 - 自建歌单 里，仅支持链接形式。对于暂无版权的音乐，QQ 音乐会显示「匹配失败」，并且不会添加至歌单里。不过，你可以在导入歌单前确认哪些歌曲无法导入。
<img src="https://pic.downk.cc/item/5ff587b43ffa7d37b3b1d6fc.png" alt="" /></p>
<p>得益于庞大的版权库，QQ 音乐在歌曲匹配的成功率上有相当大的优势。另外，QQ 音乐也正在测试「听歌数据搬家工具」，目前仅对部分用户开放。根据官方介绍中的支持「手机自带音乐服务」来看，QQ 音乐将有可能支持 Apple Music 的数据导入。</p>
<p>遗憾的是，QQ 音乐并不支持导出链接。你可以通过音乐卡片或分享到新浪微博的方式来导出歌单。
<img src="https://pic.downk.cc/item/5ff584bf3ffa7d37b3adcc2f.jpg" alt="" /></p>
<p>QQ 音乐不支持分享链接
网易云音乐
网易云的导入功能在 我的 - 导入外部歌单 里，同样支持链接和二维码两种方式。导入速度方面，网易云也做得不错。即使遇到需要等待后台处理的情况，通常也能在半分钟内导入成功。</p>
<p>对于暂无版权的音乐，网易云也会保留在歌单中，如果音乐库里有相似音乐（比如同一歌手的不同版本，或是不同歌手的翻唱版），网易云也会将它推荐给你。</p>
<p><img src="https://pic.downk.cc/item/5ff584d43ffa7d37b3ade7ba.jpg" alt="" /></p>
<p>虽然网易云支持导出为链接，但通过链接仅能查看 1000 首音乐。如果你的歌单超过这个数字，在导入至其他平台时，只能保留前 1000 首歌。</p>
<p>酷狗音乐
酷狗音乐是四个平台中唯一支持截图导入的平台（网易云曾经支持过，但后来删掉了该功能），但它却并不支持扫描二维码导入。也就是说，如果你想把 QQ 音乐的歌单导入进酷狗音乐，只能通过分享到微博来获取链接。</p>
<p>酷狗音乐的导入功能在 我的 - 自建歌单 里。点击「新建 / 导入外部歌单」后，还需要再点击「导入外部歌单」并选择导入方式，稍显麻烦。</p>
<p><img src="https://pic.downk.cc/item/5ff584d43ffa7d37b3ade7ba.jpg" alt="" />
尽管酷狗音乐支持截图导入，但在分别测试了 Apple Music 和 Spotify 的歌单、专辑界面的截图后，实际的导入体验并不算好。受限于版权库，酷狗音乐有许多歌曲都无法匹配。另外，酷狗音乐似乎也无法进行简繁转换，Spotify 和 Apple Music 上繁体字标题的音乐（包括 Apple Music 自行翻译的英文歌）基本无法识别。</p>
<p>不过，酷狗音乐对于标题为简体字和英文的歌曲，有着较高的识别率。应用支持一次性上传最多 9 张图片，你也可以通过长截图来一次性导入整个歌单。
<img src="https://pic.downk.cc/item/5ff584ef3ffa7d37b3ae101d.jpg" alt="" /></p>
<p>酷狗音乐是唯一一款不需要借助第三方工具即可导入 Apple Music 和 Spotify 歌单的平台。如果你想将 Apple Music 或 Spotify 音乐导入至国内平台，可以利用酷狗音乐的截图识别，先将歌单导入至酷狗音乐，再通过链接分享功能导入至其他平台。</p>
<p>国际平台
国内音乐平台有一个共同的问题：导入容易导出难，如果你想把国内音乐平台的数据迁移到 Apple Music、Spotify 这样的国际音乐平台，就难免需要借助第三方工具来实现了。
<img src="https://pic.downk.cc/item/5ff584823ffa7d37b3ad791e.jpg" alt="" />
迁移至 Spotify
从国内主流音乐平台迁移至 Spotify 的方法其实不少，我个人比较推荐的是 Uselesses 这个在线工具。Uselesses 支持网易云音乐、QQ 音乐、虾米音乐和百度音乐，你只需要先登陆 Spotify 并为 Uselesses 授权，随后粘贴歌单链接即可开始导入。
<img src="https://pic.downk.cc/item/5ff584993ffa7d37b3ad9974.jpg" alt="" /></p>
<p>在实际体验中，虽然也有部分无法导入的歌曲，但整体的成功率还是比较高的。另外，开发者正在对其进行持续维护，即使遇到音乐平台的接口问题，也能得到及时解决。如果你在使用过程中遇到问题，也可以在微博 @Uselesses 进行反馈。
<img src="https://pic.downk.cc/item/5ff584443ffa7d37b3ad243f.gif" alt="" />
迁移至 Apple Music
虽然有些快捷指令可以帮我们从国内平台迁移到 Apple Music，但实际体验并不算理想，很可能出现 100 首歌只能导入几首的现象，并且快捷指令也比较容易失效。因此，我更推荐先通过 Uselesses 导入进 Spotify 再由 Spotify 导入至 Apple Music，这样可以尽可能多地保留你的歌单曲目。
<img src="https://pic.downk.cc/item/5ff5847b3ffa7d37b3ad7019.jpg" alt="" />
当然，如果你想直接将歌曲导入进 Apple Music，也可以尝试一下 TuneMyMusic 这个在线服务。TuneMyMusic 本身是为国际音乐平台提供数据迁移的服务，但它提供的「从文本」和「上传文件」两种导入方式，让我们可以将国内平台的歌单轻松地迁移至 Apple Music、Tidal 等国际平台。
<img src="https://pic.downk.cc/item/5ff584893ffa7d37b3ad8255.jpg" alt="" /></p>
<p>首先，我们要想办法将歌单转换为文字形式。你可以使用 GitHub 上的 这个项目 将网易云或 QQ 音乐的歌单转换为文字形式。如果你用的是虾米音乐，也可以尝试 歌单助手，它能将你的歌单导出为 Excel 格式。</p>
<p>以网易云音乐为例，你需要先将歌单分享为链接，随后提取链接中的歌单 ID。比如在 <a href="https://music.163.com/#/playlist?id=936418138">https://music.163.com/#/playlist?id=936418138</a> 这个链接中，id= 后面的 936418138 就是歌单 ID。</p>
<p>将这个 ID 粘贴到 这个网页 的输入框中，并点击「Search」即可将歌单转换为文字。随后，点击底部的「点我复制」即可回到 TuneMyMusic。
<img src="https://pic.downk.cc/item/5ff584b73ffa7d37b3adc060.jpg" alt="" /></p>
<p>在 TuneMyMusic 的界面选择「从文本」，将刚刚复制下来的歌曲列表粘贴进输入框。随后在下一步中选择需要导入的平台并登陆，在确认无误后即可开始传输。</p>
<p>传输的成功率与迁移平台的版权库相关。以网易云迁移至 Apple Music 为例，网易云中一些「华语精选」的歌曲，或是粉丝自行录制上传的歌曲就无法被迁移到 Apple Music 中。</p>
<p>除了 Apple Music 外，如果你想将歌单迁移到 Tidal、YouTube Music 的话，也可以尝试这一方法。
<img src="https://pic.downk.cc/item/5ff584c63ffa7d37b3add61d.jpg" alt="" />
国际平台相互迁移
前文介绍的 TuneMyMusic 已经可以做到国际音乐平台之间的相互迁移，如果你是 iOS 用户，也可以尝试一下 SongShift 这款应用。在操作上，你只需要选择想要迁移的平台进行登录授权，随后选择歌单即可。</p>
<p>SongShift 免费用户只能迁移一个歌单，Pro 用户则可以迁移曲库里的所有歌单，并且还可以实现两个平台歌单的自动同步。</p>
]]></content><link href="https://github.com/myogg/meek/issues/5"/><category term="正文"/><published>2024-04-26T16:49:59+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/4</id><title>真正的屠城，远比一刀砍死要残酷的多</title><updated>2024-04-27T17:35:14.409853+00:00</updated><content type="html"><![CDATA[<p>如果是要杀光所有人，那也就罢了，左右都是个死，一刀的事。</p>
<h3>但真正的屠城，远比一刀砍死要残酷的多。</h3>
<p>在古代，人口是非常宝贵的资源，对于已经放弃抵抗的居民，但凡有一丝可能，统治者都不愿意进行屠城。</p>
<p>之所以会产生屠城这样的命令，更大的原因，是为了激励前方的士卒，将屠城作为一种奖赏，而且还可以震慑其他的城池。</p>
<h3>但是对于士卒而言，他们其实也不愿意屠城。###</h3>
<p>杀人确实是爽，看到大片俘虏跪在自己的屠刀下任由自己一个个的杀戮，确实很让人兴奋，但杀多了没就没意思了。</p>
<p>杀人并不能带来什么好处，一毛钱赚不到，杀完了还会弄的自己一身污血，脏兮兮的，回去还要洗衣服。</p>
<p>所以杀几个人新奇一下也就可以了，大多数兵卒并无杀人成瘾的嗜好。</p>
<p>但古代的兵卒，几乎全部由穷人组成，他们虽然不会杀人成瘾，但是对钱财有着巨大的需求，无上限的需求。</p>
<p>没人会嫌自己钱多，穷困的兵卒当然也是。</p>
<h3>所以，扬州屠城，需要屠十日。###</h3>
<p>如果真只是为了屠干净扬州所有人，封锁城门后四处放火，每几百米点一处火，一两天时间城中所有人都会被烧死，就算没死也会失去藏身之处，杀人效率极高。</p>
<p>但这么做，对于清兵来说没有任何好处。</p>
<p>明末王秀楚的《扬州十日记》，很好地还原了扬州十日的惨状，也很好地解释了为啥扬州需要屠十日。</p>
<p>《扬州十日记》名列《四库禁毁丛刊目录》，亦名列光绪八年所刻的《禁书总目》，在乾隆时期军机处的奏准全毁书目中亦有《扬州十日记》这一书名。</p>
<p>目前还能找到的残本古籍，是在日本发现的。</p>
<p><img src="https://pic.downk.cc/item/5fb10ee09a486106c045e6e6.jpg" alt="" /></p>
<p>1645 年 4 月 25 日，扬州沦陷，多铎纵兵屠城，下令十日封刀，史称「扬州十日」。</p>
<h3>但清兵入城的第一天，并未大开杀戒</h3>
<p>因为杀人没有意义啊，士兵们要的是钱，抓紧时间捞钱才是王道。</p>
<p>清兵们成群结队，挨家挨户地砸门索要财物。</p>
<p>开始的时候，勒索是非常温柔的，并不贪婪，给一些钱，清兵就走了，如果不愿意给，那清兵就持刀恐吓，只要听话，清兵一般不会伤人。</p>
<p>《扬州十日记》是这么记载的：</p>
<blockquote>
<p>始知为逐户索金也，然意颇不奢，稍有所得，即置不问，或有不应，虽操刀相向，尚不及人
当然，这里要说明一下，这里的「意颇不奢」是以作者王秀楚的眼光去看的，但王秀楚本人是当地乡绅，典型上流社会的人，扬州城破之前就和明军杨姓守将交好，获得其庇护。</p>
</blockquote>
<p>十万八万的对富豪来说确实不多，但确实可能是普通居民的全部财产。</p>
<p>但是这也说明了一件事，最开始的时候大部分清兵都是求财不害命的，只有少数清兵顺手杀几个人过过瘾。</p>
<p>毕竟此时的扬州已经是在跪迎王师，百姓曲意奉承，一般人自然不会滥下杀手。</p>
<p>忽叩门声急，则邻人相约共迎王师，设案焚香，示不敢抗，予虽知事不济，然不能拂众议，姑应曰唯唯。
但扬州城仅 100 余万人，而入城的清兵高达十余万，人均勒索 10 人，也就是大概 2 户的样子，就已经把扬州全城勒索一遍了，半天就可以把全扬州搜刮干净。</p>
<p>所以从第二天开始，勒索行为迅速升级。</p>
<h3>清兵大开杀戒。###</h3>
<p>此时的清兵已经看清楚了，僧多肉少，扬州虽大，但清兵太多，慢慢薅羊毛的话自己最后可能汤都喝不到，不如直接把羊宰了吃肉。</p>
<p>你不抢，别人抢，你不杀，别人杀。</p>
<p>很快所有的清兵都疯狂了。</p>
<p>我不管你昨天是给哪个清兵交钱的，今天必须给我足够的钱，给的钱让我满意，那就可以保得一命，不满意，就一刀砍下来。</p>
<p>直接以杀人相威胁，可以用最快的速度，最大程度拿到居民隐藏起来的财物。</p>
<p>你之前的金银珠宝是埋在土里也好，藏在墙里也罢，我懒得找，你自己挖出来给我。</p>
<p>不给，就去死。</p>
<p>如果杀绝这一户全家所有人，都没人能给出更多的钱，那就证明这一户确实没钱了，杀人可能杀错了。</p>
<p>但也无所谓，既然你都没钱了，还留着干嘛，杀了就杀了。</p>
<p>人人都争先恐后地搜刮钱财，生怕被别人抢先了，这就导致清兵的胃口徒然变大，而居民手中的钱财迅速变少。</p>
<p>金银珠宝自然是全部拿走，连妇人的衣服，好看的也要拿走，幼儿脖子上的银锁，也要带走，可谓是刮地三尺。</p>
<p>予妇衣饰置两瓮中，倒置阶下，尽发以供其取，凡金珠之类莫不取，而衣服择好者取焉。既毕，视儿项下有银锁，将刀割去，去时顾予曰：「吾不杀尔，自有人杀尔也。」
很快，就有人被搜刮一空，再也拿不出钱了，然后全家都被下一波清兵给杀得干干净净。</p>
<p>慢慢的，被杀得人越来越多，还能交出钱得人越来越少。</p>
<p>很多人没了钱，就把自己藏得严严实实，但扬州城就那么大，能藏人的地方就那么点，绝大多数人都找不到安全的藏身之地。</p>
<p>更何况，还有不少本地人，主动给清兵当向导去搜寻藏匿之人，只求自己能活命。</p>
<p>动手杀人的清兵越来越多，还能侥幸活下去的扬州人越来越少。</p>
<p>榨不出钱财后，清兵们就把男人和样貌普通的女人给屠杀一空，而把那些有姿色的女人给搜集起来。</p>
<p>毕竟在那个年代，把这些女子运到后方，也能换一些财物。</p>
<p>但这些漂亮女子的遭遇，并不是现代的普通人可以想象的，绝不只是被奸污就能免于伤害的，万般逢迎，也就只是能活一命而已。</p>
<p>二妾皆散发露肉，足深入泥中没胫，一妾犹抱一女，卒鞭而掷之泥中，旋即驱走。诸妇女长索系颈，累累如贯珠，一步一蹶，遍身泥土；满地皆婴儿，或衬马蹄，或藉人足，肝脑涂地，泣声盈野。行过一沟一池，堆尸贮积，手足相枕，血入水碧赭，化为五色，塘为之平。
就这样，扬州城内的百姓被一轮轮的收割，被彻彻底底的榨干，等到割无可割了，人也死的差不多了，差不多也就到了十日之期了。</p>
<p>扬州城百万居民，事后被清点出 80 余万尸首，十万清兵人均杀 8 人。</p>
<p>查焚尸簿载其数，前後约计八十万馀，其落井投河，闭户自焚，及深入自缢者不与焉。
连杀 10 天，共杀 8 人，平均每天杀 0.8 人，杀人效率看起来确实不高，但这更恐怖。</p>
<h3>因为这 80 万人，是在极端的恐慌和绝望下，被人一点点慢慢杀死的。###</h3>
<p>清兵给了每个人生机，让每个人都看到了活下去的希望，虽然满城都是死尸，但你觉得只要自己小心点，就能活下去。</p>
<p>有希望是好事，不过等屠刀架到自己脖子上的时候，你反而会更加得绝望。</p>
<p>让人在恐惧和希望中折磨数日再杀死，这远远比一开始就无差别屠杀要残忍得多。</p>
<p>这就是古代的屠城，人间地狱已不能形容其凄惨。</p>
<p>今天的世界，处于和平时期，但也仅仅只是 50 年的和平而已。</p>
<p>哪怕是古代的封建王朝，200 余年的太平盛世也并不罕见。</p>
<p>所以今天的和平，绝不代表永久性的和平。</p>
<p>所谓人道主义，大国切磋的时候还有用，一旦打出真火，进入真正的战争时期，一切规矩统统作废。</p>
<p>《扬州十日记》的最后一段是这么写的：</p>
<blockquote>
<p>自四月二十五日起，至五月五日止，共十日，其间皆身所亲历，目所亲睹，故漫记之如此，远处风闻者不载也。後之人幸生太平之世，享无事之乐；不自修省，一味暴殄者，阅此当惊惕焉耳！</p>
</blockquote>
<p>我给大家翻译一下最后一句：如果后人有幸生于太平之世，享受到无战乱的快乐；那些不加强自我修养，不进行自我反省，反而沉迷于享受的人，阅读此文，应当惊醒警惕了！</p>
]]></content><link href="https://github.com/myogg/meek/issues/4"/><category term="正文"/><published>2024-04-26T15:23:58+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/3</id><title>[转载]这个博客开源了</title><updated>2024-04-27T17:35:14.574485+00:00</updated><content type="html"><![CDATA[<h1><a href="https://github.com/yihong0618/gitblog/issues/177">点击进入作者仓库</a></h1>
<p>因为一篇去年非常触动我的文章--<a href="https://laike9m.com/blog/people-die-but-long-live-github,122/">People Die, but Long Live GitHub</a>
我决定不再用纸笔写日记，进而全部转到 GitHub 上。如果你看到这个，这个其实不是那些大牛的技术博客，而是单纯的碎碎念偶尔认真的记录自己而已。</p>
<hr />
<p>虽然如此但也经历了几个阶段</p>
<ol>
<li>纯粹的写issue</li>
<li>写完issue后添加目录到README</li>
<li>改成webhook用flask部署个callback 每次写完issue自动生成新的 README</li>
<li>最近算是学会了一些 GitHub Actions，现在只需要写 issue 打 label 就好了，其余完全不用管。核心代码在 main.py</li>
<li>支持了 RSS</li>
</ol>
<hr />
<p>如果你也想自己写issue博客，并自动生成README，你可以参考如下步骤</p>
<ol>
<li>fork this repo (or just copy the  file whatever)</li>
<li>change GitHub secret </li>
<li>write issue and add label</li>
<li>please delete all files in BACKUP folder(2020.11.26 add)</li>
<li>别忘了在 settings 里打开 Actions 读写的权限</li>
</ol>
<p>关于如何生成 GitHub secret token</p>
<p><img src="https://user-images.githubusercontent.com/15976103/91701631-27079f00-ebaa-11ea-8586-33b5989b73fb.png" alt="image" /></p>
<ol>
<li>在<a href="https://github.com/settings/tokens">这里</a> 点击 <code>generate new token</code>把需要的点上</li>
<li>在你的repo 中更改 secret 中把刚生成的token设置进去
<img src="https://user-images.githubusercontent.com/15976103/91701799-6209d280-ebaa-11ea-89a2-07f5699d9acb.png" alt="image" /></li>
<li>更改workflow中的token name 换成你自己的（不要忘了secrets 点）
<img src="https://user-images.githubusercontent.com/15976103/91702020-b745e400-ebaa-11ea-95e2-e2f9bcad917a.png" alt="image" /></li>
</ol>
]]></content><link href="https://github.com/myogg/meek/issues/3"/><category term="存档"/><published>2024-04-26T15:13:34+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/2</id><title>about</title><updated>2024-04-27T17:35:14.749565+00:00</updated><content type="html"><![CDATA[<p>about</p>
<p>一事无成.
一瓶子不满，半瓶子咣当。.</p>
]]></content><link href="https://github.com/myogg/meek/issues/2"/><category term="About"/><published>2024-04-26T15:01:53+00:00</published></entry><entry><id>https://github.com/myogg/meek/issues/1</id><title>记录</title><updated>2024-04-27T17:35:14.883746+00:00</updated><content type="html"><![CDATA[<p>昨天重新做了系统，试了各种方法连接不到这个博客。</p>
<p>更新了四五年的博客我一气之下删除了，从今天起用这个来记录我的后半生。</p>
]]></content><link href="https://github.com/myogg/meek/issues/1"/><category term="一些记录"/><published>2024-04-26T14:52:26+00:00</published></entry></feed>